{"version":3,"sources":["header.js","banner.js","container.js","App.js","serviceWorker.js","index.js"],"names":["Header","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","document","getElementById","classList","toggle","react_default","a","createElement","className","href","id","onClick","handleClick","role","React","Component","Banner","innerHTML","Container","x","style","display","App","header_Header","banner_Banner","container_Container","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0baa9c10.chunk.js","sourcesContent":["import React from 'react'\nimport './index.css'\n\nexport class Header extends React.Component {\n        handleClick() {\n            document.getElementById(\"menu\").classList.toggle(\"on\");\n            document.getElementById(\"nav\").classList.toggle(\"on\");\n            document.getElementById(\"nav\").classList.toggle(\"hidden\");\n        }\n\n        render() {\n            return (\n                <div className=\"header clearfix\">\n    <a href=\"#\" className=\"logo\">Logo</a>\n            <a href=\"#\" className=\"menu-toggle\" id=\"menu\" onClick={this.handleClick}><span></span></a>\n            <ul role=\"navigation\" className=\"nav hidden\" id=\"nav\">\n                <li><a href=\"#\">Item 1</a></li>\n                <li><a href=\"#\">Item 2</a></li>\n                <li><a href=\"#\">Item 3</a></li>\n                <li><a href=\"#\">Item 4</a></li>\n            </ul>\n    \n  </div>\n            )\n}}","import React from 'react'\nimport './index.css'\n\n\n\n\nexport class Banner extends React.Component {\n    handleClick () {\n      document.getElementById(\"welcome_message\").innerHTML=\"<h1>Hava a good time!</h1>\";\n    }\n    \n    render() {\n        return (\n            <div className=\"content\"><div id=\"welcome_message\" className=\"welcome_message\" onClick={this.handleClick}>\n               <h1 className=\"welcome_message\" >Welcome to AppWorks School</h1>\n       \n           </div></div>)\n    } \n}","import React from 'react'\nimport './index.css'\n\n\n\nexport class Container extends React.Component {\n    handleClick() {\n        const x = document.getElementById(\"hide\");\n        if (x.style.display === \"block\") {\n            x.style.display = \"none\";\n        } else {\n            x.style.display = \"block\";\n        }\n    }\n    \n    render () {\n        return (\n         <div className=\"content\">\n            \n            \n            <ul className=\"box clearfix\">\n                <li>Content Box 1</li>\n                <li>Content Box 2</li>\n                <li>Content Box 3</li>\n                <li>Content Box 4</li>\n            </ul>\n            <a href=\"#\" className=\"button\" id=\"showHide\" onClick={this.handleClick}>Call to Action</a>\n            <ul className=\"box clearfix hide\" id=\"hide\">\n                <li>Content Box 1</li>\n                <li>Content Box 2</li>\n                <li>Content Box 3</li>\n                <li>Content Box 4</li>\n            </ul>\n        </div> \n            \n       \n            \n        \n        )\n    }\n\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { Header } from './header'\nimport { Banner } from './banner'\nimport { Container} from './container'\n\nclass App extends React.Component { \n    \n    render(){\n      return(\n        <div className=\"wrapper\">\n          <Header />\n          <Banner />\n          <Container />\n        </div>  \n      )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}